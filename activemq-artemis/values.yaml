
image:
  # image.registry is the repository where the ActiveMQ Artemis image is stored
  registry: docker.io
  # image.repository is the ActiveMQ Artemis image name
  repository: vromero/activemq-artemis
  # image.tag is the ActiveMQ Artemis image's tag: https://hub.docker.com/r/vromero/activemq-artemis/tags
  # tag: 2.6.2
  # image.pullPolicy is the ActiveMQ Artemis image's pull policy
  pullPolicy: Always
  # image.pullSecrets optionally specify an array of imagePullSecrets.Secrets must be manually created in the namespace.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  pullSecrets: []

# artemisUser sets the artemis admin user name
artemisUser: artemis
# artemisPassword sets the artemis admin user password
artemisPassword: simetraehcapa

replicas: 1

# antiAffinity sets an anti affinity policy between masters and slaves as either hard or soft, default is hard
antiAffinity: "soft"

# nameOverride replaces the computed chart name with this given name. 
# nameOverride: 

# namePrefix sets the prefix for the fullname in the template "global prefix + prefix + name + suffix + global suffix"
# namePrefix:

# nameSuffix sets the suffix for the fullname in the template "global prefix + prefix + name + suffix + global suffix"
# nameSuffix: 

global:
# namePrefix sets the global prefix for the fullname in the template "global prefix + prefix + name + suffix + global suffix"
#   namePrefix: Global prefix
# nameSuffix sets the global suffix for the fullname in the template "global prefix + prefix + name + suffix + global suffix"
#   nameSuffix: Global suffix

deployment:
  ## Artemis Deployment annotations
  annotations: {}
  #   name: value

replica:
  ## Artemis Replicas annotations
  annotations: {}

  ## Read more about kube2iam to provide access to s3 https://github.com/jtblin/kube2iam
  #   iam.amazonaws.com/role: role-arn

## Sets environment variables for the artemis container
env: {}

## Persist data to a persitent volume
persistence:
  testJournalPerformance: AUTO
  enabled: false
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  # storageClass:
  size: 8Gi
  accessMode: ReadWriteOnce
  ## Set existingClaim to true or false
  ## If true, you must prepare a PVC with the name e.g `artifactory-ha-member`
  existingClaim: false

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 256Mi
    cpu: 100m

## Service type
service:
  type: None

ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  path: /

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  ## hostName: foo.bar.com

  ## Set this to true in order to enable TLS on the ingress record
  tls: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: myTlsSecret

  ## Ingress annotations done as key:value pairs
  annotations: {}
  #  kubernetes.io/ingress.class: nginx  

## Prometheus Exporters / Metrics
##
prometheus:

  ## Prometheus JMX Exporter: exposes the majority of Kafkas metrics
  jmx:
    ## Interval at which Prometheus scrapes metrics, note: only used by Prometheus Operator
    interval: 10s

    ## Timeout at which Prometheus timeouts scrape run, note: only used by Prometheus Operator
    scrapeTimeout: 10s

    ## Port jmx-exporter exposes Prometheus format metrics to scrape
    port: 5556

  operator:
    ## Are you using Prometheus Operator?
    enabled: false

    serviceMonitor:
      # Namespace Prometheus is installed in
      namespace: monitoring

      ## Defaults to whats used if you follow CoreOS [Prometheus Install Instructions](https://github.com/coreos/prometheus-operator/tree/master/helm#tldr)
      ## [Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/prometheus/templates/prometheus.yaml#L65)
      ## [Kube Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/kube-prometheus/values.yaml#L298)
      selector:
        prometheus: kube-prometheus

